version: '3.8'

#
# Common vizsciflow template for web and Celery services below
#
x-common-vizsciflow:
  &default-common-vizsciflow
  image: vizsciflow
  build:
    context: .
    dockerfile: Dockerfile 
    args:
      - "UID=${UID}"
  restart: on-failure
  env_file:
    - .env
  volumes:
    - ./src:/home/vizsciflow/src
    - ./storage:/home/vizsciflow/storage
    - /var/run/docker.sock:/var/run/docker.sock
    - ./.venvs:/home/venvs:rw
  networks:
    - vizsciflownetwork
  environment:
    - FLASK_CONFIG=development

services:
  vizsciflowweb:
    <<: *default-common-vizsciflow
    # command: sh -c "tail -F anything" # debug
    command: >
      sh -c "/home/venvs/.venv/bin/gunicorn -b :5000 --access-logfile - --error-logfile - manage:app"
    depends_on:
      - vizsciflowdb      
    ports:
      - 5000:5000
    container_name: vizsciflowweb

  vizsciflowcelery:
    <<: *default-common-vizsciflow
    hostname: worker
    entrypoint: /home/venvs/.venv/bin/celery
    command: -A app.jobs worker --loglevel=info
    depends_on:
      - vizsciflowredis
    container_name: vizsciflowcelery
    ports:
      - 6900:6900

  vizsciflowdb:
    image: postgres:13-alpine
    volumes:
      - ~/.docker/postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${VIZSCIFLOW_DB_USER}
      - POSTGRES_PASSWORD=${VIZSCIFLOW_DB_PASSWORD}
      - POSTGRES_DB=biowl
    container_name: vizsciflowdb
    networks:
      - vizsciflownetwork
    ports:
      - 5432:5432

  # neo4j:
  #   container_name: Neo4j
  #   image: neo4j:latest
  #   volumes:
  #     - ~/.docker/neo4j/data:/data
  #     - ~/.docker/neo4j/plugins:/plugins
  #     - ~/.docker/neo4j/import:/import
  #   ports:
  #     - "7474:7474"
  #     - "7687:7687"
  #   environment:
  #     - NEO4J_apoc_export_file_enabled=true
  #     - NEO4J_apoc_import_file_enabled=true
  #     - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
  #     - NEO4J_dbms_memory_heap_initial__size=512m
  #     - NEO4J_dbms_memory_heap_max__size=2G
  #     - NEO4J_apoc_uuid_enabled=true
  #     - NEO4J_dbms_default__listen__address=0.0.0.0
  #     - NEO4J_dbms_allow__upgrade=true
  #     - NEO4J_dbms_default__database=neo4j
  #     - NEO4J_AUTH=neo4j/sr-hadoop
  #   networks:
  #     - flownetwork
  #   restart: unless-stopped

  # es01:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
  #   container_name: es01
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es02,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:Name
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - ~/.docker/es/data01:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - flownetwork

  # kib01:
  #   image: docker.elastic.co/kibana/kibana:7.13.4
  #   container_name: kib01
  #   ports:
  #     - 5601:5601
  #   environment:
  #     ELASTICSEARCH_URL: http://es01:9200
  #     ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
  #   networks:
  #     - flownetwork

  vizsciflowredis:
    image: "redis:latest"
    ports:
      - 6379:6379
    container_name: vizsciflowredis
    networks:
      - vizsciflownetwork
      
networks:
  vizsciflownetwork:
    driver: bridge
  
volumes:
  postgres:
  neo4j:
  data01:
