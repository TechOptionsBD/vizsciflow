"""empty message

Revision ID: eefe49ba33b8
Revises: 9a2ae4049c4d
Create Date: 2023-02-11 15:45:59.488083

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'eefe49ba33b8'
down_revision = '9a2ae4049c4d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.String(length=30), nullable=True),
    sa.Column('status', sa.String(length=30), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('modified_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('activitylogs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('time', sa.DateTime(), nullable=True),
    sa.Column('type', sa.Text(), nullable=True),
    sa.Column('log', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflowparams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflowreturns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workflow_id', sa.Integer(), nullable=True),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['workflow_id'], ['workflows.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('runnableargs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('runnable_id', sa.Integer(), nullable=True),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['runnable_id'], ['runnables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('runnablereturns',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('runnable_id', sa.Integer(), nullable=True),
    sa.Column('value', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['runnable_id'], ['runnables.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('mimetypes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('extension', sa.Text(), nullable=True))

    with op.batch_alter_table('runnables', schema=None) as batch_op:
        batch_op.alter_column('duration',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
        batch_op.drop_column('args')

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('duration', sa.Float(), nullable=True))

    with op.batch_alter_table('workflows', schema=None) as batch_op:
        batch_op.drop_column('args')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('workflows', schema=None) as batch_op:
        batch_op.add_column(sa.Column('args', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))

    with op.batch_alter_table('tasks', schema=None) as batch_op:
        batch_op.drop_column('duration')

    with op.batch_alter_table('runnables', schema=None) as batch_op:
        batch_op.add_column(sa.Column('args', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.alter_column('duration',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('mimetypes', schema=None) as batch_op:
        batch_op.drop_column('extension')

    op.drop_table('runnablereturns')
    op.drop_table('runnableargs')
    op.drop_table('workflowreturns')
    op.drop_table('workflowparams')
    op.drop_table('activitylogs')
    op.drop_table('activities')
    # ### end Alembic commands ###
