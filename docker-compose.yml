version: '3.8'

services:
  web:
    build: .
    command: venv/bin/gunicorn -b :5000 --access-logfile - --error-logfile - manage:app
    depends_on:
      - db
    ports:
      - 8000:5000
    env_file:
      - ./.env.dev
  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=phenodoop
      - POSTGRES_PASSWORD=sr-hadoop
      - POSTGRES_DB=biowl
  neo4j:
    container_name: Neo4j
    image: neo4j:latest
    volumes:
      - ./data:/data
      - ./plugins:/plugins
      - ./import:/import
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_apoc_uuid_enabled=true
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_allow__upgrade=true
      - NEO4J_dbms_default__database=neo4j
      - NEO4J_AUTH=neo4j/sr-hadoop
    networks: ["Neo4j"]
    restart: unless-stopped
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.4
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic
  kib01:
    image: docker.elastic.co/kibana/kibana:7.13.4
    container_name: kib01
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
    networks:
      - elastic
  celery:
    build: .
    hostname: worker
    entrypoint: celery
    command: worker -A app.jobs --loglevel=info
    volumes:
      - ./api:.
    links:
      - redis
    depends_on:
      - redis
  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
      
networks:
  Neo4j:
  elastic:
  
volumes:
  postgres_data:
  Neo4j:
  data01:
  celery:
