{
    "functions": [
       {
           "org": "SRLAB",
           "package": "imgproc",
           "module": "libraries.imgproc.imagefuncs",
           "name":"ReduceNoise",
           "internal":"reduce_noise",
           "desc": "Reduce noises from an image.",
           "params":[  
            {  
               "name":"source",
               "type":"string"
            },
            {  
               "name":"destination",
               "type":"string"
            }            
            ],           
           "example": "ReduceNoise('images/test_image.jpg', 'output/test_image.jpg')"
       },
       {
           "org": "SRLAB",
           "package": "imgproc",
           "module": "libraries.imgproc.imagefuncs",
           "name":"ConvertColor",
           "internal":"convert_color",
           "desc": "Converts an image from one color space to another.",
           "params":[  
            {  
               "name":"source",
               "type":"string"
            },
            {  
               "name":"destination",
               "type":"string"
            },
            {  
               "name":"code",
               "type":"int"
            }            
            ],           
           "example": "ConvertColor('images/test_image.jpg', 'output/test_image.jpg', [code=6]) # code (3rd param) is conversion code from opencv cv2.COLOR_BGR2GRAY=6"
       },
       {
           "org": "SRLAB",
           "package": "imgproc",
           "module": "libraries.imgproc.imagefuncs",
           "name":"RegisterImage",
           "internal":"register_image",
           "desc": "Image registration (alignment). https://www.learnopencv.com/image-alignment-ecc-in-opencv-c-python/",
           "params":[  
            {  
               "name":"source",
               "type":"string"
            },
            {  
               "name":"destination",
               "type":"string"
            }           
            ],           
           "example": "RegisterImage('images/test_image1.jpg', 'images/test_image2.jpg', 'output/test_image.jpg')"
       },
       {
           "org": "p2irc",
           "package": "p2irc",
           "module": "p2irc.image_tools.registration",
           "level": "1",
           "group": "Image",
           "name":"Register",
           "internal":"register_channels",
           "desc": "Takes a folder of images and registers them together.",
           "params":[  
            {  
               "name":"source",
               "type":"string"
            },
            {
                "name": "destination",
                "type": "string"
            }            
            ],
            "example":"Register('storage/register/', 'storage/output/')",
            "runmode": "local"
       },
       {
           "org": "p2irc",
           "package": "p2irc",
           "module": "p2irc.plot_segmentation.plot_segmentation",
           "level": "1",
           "group": "Image",
           "name":"SegmentPlots",
           "internal":"main",
           "desc": "Do plot segmentation upon a single stitched image: compute bounding boxes in pixel coordinates for every plot in this image, based upon the provided list of lists of pixels delineating the physical field rows, and a description of the plots",
           "params":[  
            {  
               "name":"img_db_path",
               "type":"string"
            },
            {
                "name": "rows",
                "type": "int"
            }            
            ],
            "example":"SegmentPlots('dbname', 10)"
       }
   ]
}